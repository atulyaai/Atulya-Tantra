name: Test Atulya Tantra AGI System

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements_optimized.txt
        pip install requests psutil asyncio-mqtt
    
    - name: Run simple model test
      run: |
        python simple_model_test.py
    
    - name: Run comprehensive tests
      run: |
        python test_simple.py
    
    - name: Test JARVIS features
      run: |
        python Test/test_jarvis_features.py
      continue-on-error: true
    
    - name: Test Skynet features  
      run: |
        python Test/test_skynet_features.py
      continue-on-error: true
    
    - name: Test AGI system
      run: |
        python Test/test_agi_system.py
      continue-on-error: true

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
    
    - name: Run Black formatter check
      run: |
        black --check --diff .
    
    - name: Run isort import sorting check
      run: |
        isort --check-only --diff .
    
    - name: Run flake8 linter
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety
    
    - name: Run Bandit security scan
      run: |
        bandit -r . -f json -o bandit-report.json
      continue-on-error: true
    
    - name: Run Safety dependency check
      run: |
        safety check --json --output safety-report.json
      continue-on-error: true
    
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json

  build:
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements_optimized.txt
        pip install requests psutil asyncio-mqtt
    
    - name: Test system startup
      run: |
        python -c "
        from Core.unified_agi_system import get_agi_system
        system = get_agi_system()
        print('✅ System initialized successfully')
        print(f'Status: {system.get_system_status()}')
        "
    
    - name: Test API startup
      run: |
        python -c "
        from Core.api.main import app
        print('✅ FastAPI app created successfully')
        print(f'Routes: {len(app.routes)}')
        "
      continue-on-error: true